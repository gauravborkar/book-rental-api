version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book_rental_app
    restart: unless-stopped
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=db  # Ensure this matches the service name of your MySQL service
    links:
      - db
    volumes:
      - .:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - db
    networks:
      - laravel
    command: >
      sh -c "composer install &&
      php artisan key:generate &&
      php artisan migrate --seed &&
      chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache &&
      chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache &&
      php-fpm"

  webserver:
    image: nginx:alpine
    container_name: book_rental_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: book_rental_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: book-rental
      MYSQL_ROOT_PASSWORD: localhost
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  dbdata: